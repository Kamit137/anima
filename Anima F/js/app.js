// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
    console.log('Initializing app...');
    console.log('MagnetManager:', typeof MagnetManager);
    console.log('ElementTypes:', ElementTypes);
    
    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    setTimeout(() => {
        console.log('ElementTypes after delay:', Object.keys(ElementTypes));
        
        ScreensManager.init();
        ElementsManager.init();
        
        setTimeout(() => {
            GridManager.init();
            DragDropManager.init();
            EditorManager.init();
            
            console.log('All managers initialized');
            
            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                const canvas = document.getElementById('appCanvas');
                console.log('Final canvas size:', canvas.offsetWidth, 'x', canvas.offsetHeight);
            }, 100);
        }, 100);
    }, 100);

    setupControlButtons();
});

function setupControlButtons() {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    document.getElementById('saveBtn').addEventListener('click', () => {
        alert('–ü—Ä–æ–µ–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
    });

    document.getElementById('previewBtn').addEventListener('click', () => {
        alert('–§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    });

    document.getElementById('exportBtn').addEventListener('click', () => {
        alert('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    });

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏ SDUI
    document.getElementById('exportContractBtn').addEventListener('click', () => {
        const contractJSON = ContractManager.exportToJSON();
        
        // –°–æ–∑–¥–∞–µ–º blob –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const blob = new Blob([contractJSON], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'project-contract.json';
        a.click();
        
        URL.revokeObjectURL(url);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('SDUI Contract:', JSON.parse(contractJSON));
    });

    document.getElementById('importContractBtn').addEventListener('click', () => {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = '.json';
        
        input.onchange = (e) => {
            const file = e.target.files[0];
            const reader = new FileReader();
            
            reader.onload = (event) => {
                const success = ContractManager.importFromJSON(event.target.result);
                if (success) {
                    alert('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞!');
                } else {
                    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞');
                }
            };
            
            reader.readAsText(file);
        };
        
        input.click();
    });

    // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
    document.getElementById('addScreenBtn').addEventListener('click', function() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ –µ—Å—Ç—å –≤ ScreensManager, –Ω–æ –¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        const screenName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞:', '–ù–æ–≤—ã–π —ç–∫—Ä–∞–Ω');
        if (screenName) {
            ScreensManager.addScreen(screenName);
        }
    });

    // –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–µ—Ç–∫–∏
    document.getElementById('applyGrid').addEventListener('click', function() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ –µ—Å—Ç—å –≤ GridManager, –Ω–æ –¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        GridManager.updateGrid();
    });

    // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–µ—Ç–∫–∏
    document.getElementById('toggleGrid').addEventListener('click', function() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ –µ—Å—Ç—å –≤ GridManager, –Ω–æ –¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        GridManager.toggleVisibility();
    });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞)
window.debugApp = {
    // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    showState: function() {
        console.log('=== APP DEBUG INFO ===');
        console.log('Current screen:', ScreensManager.getCurrentScreen());
        console.log('All screens:', ScreensManager.screens);
        console.log('ElementTypes:', ElementTypes);
        console.log('Grid settings:', {
            cols: GridManager.cols,
            rows: GridManager.rows,
            cellSize: GridManager.cellWidth + 'x' + GridManager.cellHeight
        });
        console.log('=====================');
    },
    
    // –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
    exportContract: function() {
        const contract = ContractManager.exportToJSON();
        console.log('SDUI Contract:', JSON.parse(contract));
        return contract;
    },
    
    // –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    resetApp: function() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?')) {
            ScreensManager.screens = [
                { id: 1, name: '–ì–ª–∞–≤–Ω–∞—è', elements: [], navIcon: 'üè†' },
                { id: 2, name: '–ú–∞–≥–∞–∑–∏–Ω', elements: [], navIcon: 'üõçÔ∏è' },
                { id: 3, name: '–ü—Ä–æ—Ñ–∏–ª—å', elements: [], navIcon: 'üë§' }
            ];
            ScreensManager.currentScreenId = 1;
            ScreensManager.renderScreensList();
            ScreensManager.renderNavigation();
            ElementsManager.renderScreenContent();
            EditorManager.clearSelection();
        }
    }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('Global error:', e.error);
});

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', function(e) {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å
    // const autoSaveData = ContractManager.exportToJSON();
    // localStorage.setItem('animaConstruct_autoSave', autoSaveData);
});